{"version":3,"file":"cubejs-client-vue.js","sources":["../src/QueryRenderer.js","../src/QueryBuilder.js","../src/index.js"],"sourcesContent":["import { toPairs, fromPairs } from 'ramda';\nimport { isQueryPresent, areQueriesEqual } from '@cubejs-client/core';\n\nexport default {\n  props: {\n    query: {\n      type: [Object, Array],\n      default: () => ({}),\n    },\n    // TODO: validate with current react implementation\n    queries: {\n      type: Object,\n    },\n    loadSql: {\n      required: false,\n    },\n    cubejsApi: {\n      type: Object,\n      required: true,\n    },\n    builderProps: {\n      type: Object,\n      required: false,\n      default: () => ({}),\n    },\n    chartType: {\n      type: String,\n      required: false,\n    },\n  },\n  data() {\n    return {\n      mutexObj: {},\n      error: undefined,\n      resultSet: undefined,\n      loading: false,\n      sqlQuery: undefined,\n    };\n  },\n  async mounted() {\n    const { query, queries } = this;\n\n    if (isQueryPresent(query)) {\n      await this.load();\n    } else if (isQueryPresent(queries)) {\n      await this.loadQueries(queries);\n    }\n  },\n  render(createElement) {\n    const { $scopedSlots, resultSet, error, loading, sqlQuery } = this;\n    const empty = createElement('div', {});\n    let slot = this.$slots.empty ? this.$slots.empty : empty;\n    let controls = createElement('div', {});\n    const onlyDefault = !('empty' in this.$slots) && !('error' in this.$scopedSlots);\n\n    if ($scopedSlots.builder && this.builderProps.measures) {\n      controls = $scopedSlots.builder({ ...this.builderProps });\n    }\n\n    if ((!loading && resultSet && !error) || onlyDefault) {\n      let slotProps = {\n        resultSet,\n        sqlQuery,\n        query: this.builderProps.query || this.query,\n      };\n\n      if (onlyDefault) {\n        slotProps = {\n          loading,\n          error,\n          refetch: this.load,\n          ...this.builderProps,\n          ...slotProps,\n        };\n      }\n\n      slot = $scopedSlots.default ? $scopedSlots.default(slotProps) : slot;\n    } else if (error) {\n      slot = $scopedSlots.error ? $scopedSlots.error({ error, sqlQuery }) : slot;\n    }\n\n    return createElement('div', {}, [controls, slot]);\n  },\n  methods: {\n    async load() {\n      const { query } = this;\n\n      if (!isQueryPresent(query)) {\n        return;\n      }\n\n      try {\n        this.loading = true;\n        this.error = null;\n        this.resultSet = null;\n\n        if (this.loadSql === 'only') {\n          this.sqlQuery = await this.cubejsApi.sql(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'sql',\n          });\n        } else if (this.loadSql) {\n          this.sqlQuery = await this.cubejsApi.sql(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'sql',\n          });\n          this.resultSet = await this.cubejsApi.load(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'query',\n          });\n        } else {\n          this.resultSet = await this.cubejsApi.load(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'query',\n          });\n        }\n\n        this.loading = false;\n      } catch (error) {\n        this.error = error;\n        this.resultSet = undefined;\n        this.loading = false;\n      }\n    },\n    async loadQueries() {\n      const { queries } = this;\n      try {\n        this.error = undefined;\n        this.loading = true;\n\n        const resultPromises = Promise.all(\n          toPairs(queries).map(([name, query]) =>\n            this.cubejsApi\n              .load(query, {\n                mutexObj: this.mutexObj,\n                mutexKey: name,\n              })\n              .then((r) => [name, r])\n          )\n        );\n\n        this.resultSet = fromPairs(await resultPromises);\n        this.loading = false;\n      } catch (error) {\n        this.error = error;\n        this.loading = false;\n      }\n    },\n  },\n  watch: {\n    loading(loading) {\n      if (loading === false) {\n        this.$emit('queryStatus', {\n          isLoading: false,\n          error: this.error,\n          resultSet: this.resultSet,\n        });\n      } else {\n        this.$emit('queryStatus', { isLoading: true });\n      }\n    },\n    cubejsApi() {\n      this.load();\n    },\n    chartType() {\n      this.load();\n    },\n    query: {\n      deep: true,\n      handler(query, prevQuery) {\n        if (!areQueriesEqual(query, prevQuery)) {\n          this.load();\n        }\n      },\n    },\n    queries: {\n      handler(val) {\n        if (val) {\n          this.loadQueries();\n        }\n      },\n      deep: true,\n    },\n  },\n};\n","import {\n  isQueryPresent,\n  defaultOrder,\n  defaultHeuristics,\n  GRANULARITIES,\n  ResultSet,\n  getOrderMembersFromOrder,\n  moveItemInArray,\n  movePivotItem,\n  areQueriesEqual,\n} from '@cubejs-client/core';\nimport { clone, equals } from 'ramda';\n\nimport QueryRenderer from './QueryRenderer';\n\nconst QUERY_ELEMENTS = ['measures', 'dimensions', 'segments', 'timeDimensions', 'filters'];\n\nconst toOrderMember = (member) => ({\n  id: member.name,\n  title: member.title,\n});\n\nconst reduceOrderMembers = (array) =>\n  array.reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []);\n\nconst operators = ['and', 'or'];\n\nconst validateFilters = (filters) =>\n  filters.reduce((acc, raw) => {\n    if (raw.operator) {\n      return [...acc, raw];\n    }\n\n    const validBooleanFilter = operators.reduce((acc, operator) => {\n      const filters = raw[operator];\n\n      const booleanFilters = validateFilters(filters || []);\n\n      if (booleanFilters.length) {\n        return { ...acc, [operator]: booleanFilters };\n      }\n\n      return acc;\n    }, {});\n\n    if (operators.some((operator) => validBooleanFilter[operator])) {\n      return [...acc, validBooleanFilter];\n    }\n\n    return acc;\n  }, []);\n\nconst getDimensionOrMeasure = (meta, m) => {\n  const memberName = m.member || m.dimension;\n  return memberName && meta.resolveMember(memberName, ['dimensions', 'measures']);\n};\n\nconst resolveMembers = (meta, arr) =>\n  arr &&\n  arr.map((e, index) => {\n    return {\n      ...e,\n      member: getDimensionOrMeasure(meta, e),\n      index,\n      and: resolveMembers(meta, e.and),\n      or: resolveMembers(meta, e.or),\n    };\n  });\n\nexport default {\n  components: {\n    QueryRenderer,\n  },\n  props: {\n    query: {\n      type: Object,\n      default: () => ({}),\n    },\n    cubejsApi: {\n      type: Object,\n      required: true,\n    },\n    initialChartType: {\n      type: String,\n      default: () => 'line',\n    },\n    disableHeuristics: {\n      type: Boolean,\n    },\n    stateChangeHeuristics: {\n      type: Function,\n    },\n    initialVizState: {\n      type: Object,\n      default: () => ({}),\n    },\n    wrapWithQueryRenderer: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    const {\n      query = this.query,\n      chartType = this.initialChartType,\n      pivotConfig,\n    } = this.initialVizState;\n\n    return {\n      initialQuery: query,\n      skipHeuristics: true,\n      meta: undefined,\n      mutex: {},\n      chartType,\n      measures: [],\n      dimensions: [],\n      segments: [],\n      timeDimensions: [],\n      filters: [],\n      availableMeasures: [],\n      availableDimensions: [],\n      availableTimeDimensions: [],\n      availableSegments: [],\n      limit: null,\n      offset: null,\n      renewQuery: false,\n      order: null,\n      prevValidatedQuery: null,\n      granularities: GRANULARITIES,\n      pivotConfig: ResultSet.getNormalizedPivotConfig(query || {}, pivotConfig),\n    };\n  },\n\n  render(createElement) {\n    const {\n      chartType,\n      cubejsApi,\n      dimensions,\n      filters,\n      measures,\n      meta,\n      query,\n      segments,\n      timeDimensions,\n      validatedQuery,\n      isQueryPresent,\n      availableSegments,\n      availableTimeDimensions,\n      availableDimensions,\n      availableMeasures,\n      limit,\n      offset,\n      setLimit,\n      removeLimit,\n      setOffset,\n      removeOffset,\n      renewQuery,\n      order,\n      orderMembers,\n    } = this;\n\n    let builderProps = {};\n\n    if (meta) {\n      builderProps = {\n        query,\n        validatedQuery,\n        isQueryPresent,\n        chartType,\n        measures,\n        dimensions,\n        segments,\n        timeDimensions,\n        filters,\n        availableSegments,\n        availableTimeDimensions,\n        availableDimensions,\n        availableMeasures,\n        updateChartType: this.updateChart,\n        limit,\n        offset,\n        setLimit,\n        removeLimit,\n        setOffset,\n        removeOffset,\n        renewQuery,\n        order,\n        orderMembers,\n        setOrder: this.setOrder,\n        setQuery: this.setQuery,\n        pivotConfig: this.pivotConfig,\n        updateOrder: {\n          set: (memberId, newOrder) => {\n            this.order = reduceOrderMembers(\n              orderMembers.map((orderMember) => ({\n                ...orderMember,\n                order: orderMember.id === memberId ? newOrder : orderMember.order,\n              }))\n            );\n          },\n          update: (newOrder) => {\n            this.order = newOrder;\n          },\n          reorder: (sourceIndex, destinationIndex) => {\n            this.order = reduceOrderMembers(\n              moveItemInArray(orderMembers, sourceIndex, destinationIndex)\n            );\n          },\n        },\n        updatePivotConfig: {\n          moveItem: ({ sourceIndex, destinationIndex, sourceAxis, destinationAxis }) => {\n            this.pivotConfig = movePivotItem(\n              this.pivotConfig,\n              sourceIndex,\n              destinationIndex,\n              sourceAxis,\n              destinationAxis\n            );\n          },\n          update: (pivotConfig) => {\n            this.pivotConfig = {\n              ...this.pivotConfig,\n              ...pivotConfig,\n            };\n          },\n        },\n      };\n\n      QUERY_ELEMENTS.forEach((elementName) => {\n        const name = elementName.charAt(0).toUpperCase() + elementName.slice(1);\n\n        builderProps[`add${name}`] = (member) => {\n          this.addMember(elementName, member);\n        };\n\n        builderProps[`update${name}`] = (member, updateWith) => {\n          this.updateMember(elementName, member, updateWith);\n        };\n\n        builderProps[`remove${name}`] = (member) => {\n          this.removeMember(elementName, member);\n        };\n\n        builderProps[`set${name}`] = (members) => {\n          this.setMembers(elementName, members);\n        };\n      });\n    }\n\n    if (!this.wrapWithQueryRenderer && this.$scopedSlots.builder) {\n      return createElement('div', {}, [this.$scopedSlots.builder(builderProps)]);\n    }\n\n    // Pass parent slots to child QueryRenderer component\n    const children = Object.keys(this.$slots).map((slot) =>\n      createElement('template', { slot }, this.$slots[slot])\n    );\n\n    return createElement(\n      QueryRenderer,\n      {\n        props: {\n          query: this.validatedQuery,\n          cubejsApi,\n          builderProps,\n        },\n        scopedSlots: this.$scopedSlots,\n        on: {\n          queryStatus: (event) => {\n            this.$emit('queryStatus', event);\n          },\n        },\n      },\n      children\n    );\n  },\n  computed: {\n    isQueryPresent() {\n      const { validatedQuery } = this;\n\n      return isQueryPresent(validatedQuery);\n    },\n    orderMembers() {\n      return getOrderMembersFromOrder(\n        [\n          ...this.measures,\n          ...this.dimensions,\n          ...this.timeDimensions.map(({ dimension }) => toOrderMember(dimension)),\n        ]\n          .map((member, index) => {\n            const id = member.name || member.id;\n\n            if (!id) {\n              return false;\n            }\n\n            return {\n              index,\n              id,\n              title: member.title,\n            };\n          })\n          .filter(Boolean),\n        this.order\n      );\n    },\n    vizState() {\n      return {\n        query: this.validatedQuery,\n        chartType: this.chartType,\n        pivotConfig: this.pivotConfig,\n      };\n    },\n    validatedQuery() {\n      let validatedQuery = {};\n      let toQuery = (member) => member.name;\n      // TODO: implement timezone\n\n      let hasElements = false;\n      QUERY_ELEMENTS.forEach((element) => {\n        if (element === 'timeDimensions') {\n          toQuery = (member) => ({\n            dimension: member.dimension.name,\n            granularity: member.granularity,\n            dateRange: member.dateRange,\n          });\n        } else if (element === 'filters') {\n          toQuery = (member) => ({\n            member: member.member && member.member.name,\n            operator: member.operator,\n            values: member.values,\n            and: member.and && member.and.map(toQuery),\n            or: member.or && member.or.map(toQuery),\n          });\n        }\n\n        if (this[element].length > 0) {\n          validatedQuery[element] = this[element].map((x) => toQuery(x));\n\n          hasElements = true;\n        }\n      });\n\n      if (validatedQuery.filters) {\n        validatedQuery.filters = validateFilters(validatedQuery.filters);\n      }\n\n      // only set limit and offset if there are elements otherwise an invalid request with just limit/offset\n      // gets sent when the component is first mounted, but before the actual query is constructed.\n      if (hasElements) {\n        if (this.limit) {\n          validatedQuery.limit = this.limit;\n        }\n\n        if (this.offset) {\n          validatedQuery.offset = this.offset;\n        }\n\n        if (this.order) {\n          validatedQuery.order = this.order;\n        }\n\n        if (this.renewQuery) {\n          validatedQuery.renewQuery = this.renewQuery;\n        }\n      }\n\n      if (\n        !this.skipHeuristics &&\n        !this.disableHeuristics &&\n        isQueryPresent(validatedQuery) &&\n        this.meta\n      ) {\n        const heuristicsFn = this.stateChangeHeuristics || defaultHeuristics;\n        const { query, chartType, shouldApplyHeuristicOrder, pivotConfig } = heuristicsFn(\n          {\n            query: validatedQuery,\n            chartType: this.chartType,\n          },\n          this.prevValidatedQuery,\n          {\n            meta: this.meta,\n            sessionGranularity: validatedQuery?.timeDimensions?.[0]?.granularity,\n          }\n        );\n\n        validatedQuery = {\n          ...validatedQuery,\n          ...query,\n          ...(shouldApplyHeuristicOrder ? { order: defaultOrder(query) } : null),\n        };\n\n        this.chartType = chartType || this.chartType;\n        this.pivotConfig = ResultSet.getNormalizedPivotConfig(\n          validatedQuery,\n          pivotConfig || this.pivotConfig\n        );\n        this.copyQueryFromProps(validatedQuery);\n      }\n\n      // query heuristics should only apply on query change (not applied to the initial query)\n      if (this.prevValidatedQuery !== null) {\n        this.skipHeuristics = false;\n      }\n\n      this.prevValidatedQuery = validatedQuery;\n      return validatedQuery;\n    },\n  },\n\n  async mounted() {\n    this.meta = await this.cubejsApi.meta();\n\n    this.copyQueryFromProps();\n\n    if (isQueryPresent(this.initialQuery)) {\n      try {\n        const dryRunResponse = await this.cubejsApi.dryRun(this.initialQuery);\n\n        this.pivotConfig = ResultSet.getNormalizedPivotConfig(\n          dryRunResponse?.pivotQuery || {},\n          this.pivotConfig\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n\n  methods: {\n    copyQueryFromProps(query) {\n      const {\n        measures = [],\n        dimensions = [],\n        segments = [],\n        timeDimensions = [],\n        filters = [],\n        limit,\n        offset,\n        renewQuery,\n        order,\n      } = query || this.initialQuery;\n\n      this.measures = measures.map((m, index) => ({\n        index,\n        ...this.meta.resolveMember(m, 'measures'),\n      }));\n      this.dimensions = dimensions.map((m, index) => ({\n        index,\n        ...this.meta.resolveMember(m, 'dimensions'),\n      }));\n      this.segments = segments.map((m, index) => ({\n        index,\n        ...this.meta.resolveMember(m, 'segments'),\n      }));\n      this.timeDimensions = timeDimensions.map((m, index) => ({\n        ...m,\n        dimension: {\n          ...this.meta.resolveMember(m.dimension, 'dimensions'),\n          granularities: this.granularities,\n        },\n        index,\n      }));\n      const memberTypes = ['dimensions', 'measures'];\n      this.filters = filters.map((m, index) => {\n        const memberName = m.member || m.dimension;\n        return {\n          ...m,\n          member: memberName && this.meta.resolveMember(memberName, memberTypes),\n          operators: memberName && this.meta.filterOperatorsForMember(memberName, memberTypes),\n          and: resolveMembers(this.meta, m.and),\n          or: resolveMembers(this.meta, m.or),\n          index,\n        };\n      });\n\n      this.availableMeasures = this.meta.membersForQuery({}, 'measures') || [];\n      this.availableDimensions = this.meta.membersForQuery({}, 'dimensions') || [];\n      this.availableTimeDimensions = (this.meta.membersForQuery({}, 'dimensions') || []).filter(\n        (m) => m.type === 'time'\n      );\n      this.availableSegments = this.meta.membersForQuery({}, 'segments') || [];\n      this.limit = limit || 10000;\n      this.offset = offset || null;\n      this.renewQuery = renewQuery || false;\n      this.order = order || null;\n    },\n    addMember(element, member) {\n      const name = element.charAt(0).toUpperCase() + element.slice(1);\n      let mem;\n\n      if (element === 'timeDimensions') {\n        mem = this[`available${name}`].find((m) => m.name === member.dimension);\n        if (mem) {\n          const dimension = {\n            ...this.meta.resolveMember(mem.name, 'dimensions'),\n            granularities: this.granularities,\n          };\n\n          mem = {\n            ...mem,\n            granularity: member.granularity,\n            dateRange: member.dateRange,\n            dimension,\n            index: this[element].length,\n          };\n        }\n      } else if (element === 'filters') {\n        mem = {\n          ...member,\n          and: resolveMembers(this.meta, member.and),\n          or: resolveMembers(this.meta, member.or),\n          member: getDimensionOrMeasure(this.meta, member),\n        };\n      } else {\n        mem = this[`available${name}`].find((m) => m.name === member);\n      }\n\n      if (mem) {\n        this[element].push(mem);\n      }\n    },\n    removeMember(element, member) {\n      let index;\n      if (element === 'timeDimensions') {\n        index = this[element].findIndex((x) => x.name === member);\n      } else if (element === 'filters') {\n        index = this[element].findIndex((x) => x.member.name === member);\n      } else {\n        index = this[element].findIndex((x) => x.name === member);\n      }\n      this[element].splice(index, 1);\n    },\n    updateMember(element, old, member) {\n      const name = element.charAt(0).toUpperCase() + element.slice(1);\n      let mem;\n      let index;\n\n      if (element === 'timeDimensions') {\n        index = this[element].findIndex((x) => x.dimension.name === old.dimension);\n        mem = this[`available${name}`].find((m) => m.name === member.dimension);\n        if (mem) {\n          const dimension = {\n            ...this.meta.resolveMember(mem.name, 'dimensions'),\n            granularities: this.granularities,\n          };\n\n          mem = {\n            ...mem,\n            dimension,\n            granularity: member.granularity,\n            dateRange: member.dateRange,\n            index,\n          };\n        }\n      } else if (element === 'filters') {\n        index = this[element].findIndex((x) => x.dimension === old);\n        mem = {\n          ...member,\n          and: resolveMembers(this.meta, member.and),\n          or: resolveMembers(this.meta, member.or),\n          member: getDimensionOrMeasure(this.meta, member),\n        };\n      } else {\n        index = this[element].findIndex((x) => x.name === old);\n        mem = this[`available${name}`].find((m) => m.name === member);\n      }\n\n      if (mem) {\n        this[element].splice(index, 1, mem);\n      }\n    },\n    setMembers(element, members) {\n      const name = element.charAt(0).toUpperCase() + element.slice(1);\n      let mem;\n      const elements = [];\n\n      members.filter(Boolean).forEach((m) => {\n        if (element === 'timeDimensions') {\n          mem = this[`available${name}`].find((x) => x.name === m.dimension);\n          if (mem) {\n            const dimension = {\n              ...this.meta.resolveMember(mem.name, 'dimensions'),\n              granularities: this.granularities,\n            };\n\n            mem = {\n              ...mem,\n              granularity: m.granularity,\n              dateRange: m.dateRange,\n              dimension,\n              index: this[element].length,\n            };\n          }\n        } else if (element === 'filters') {\n          mem = {\n            ...m,\n            and: resolveMembers(this.meta, m.and),\n            or: resolveMembers(this.meta, m.or),\n            member: getDimensionOrMeasure(this.meta, m),\n          };\n        } else {\n          mem = this[`available${name}`].find((x) => x.name === m);\n        }\n\n        if (mem) {\n          elements.push(mem);\n        }\n      });\n\n      this[element] = elements;\n    },\n    setLimit(limit) {\n      this.limit = limit;\n    },\n    removeLimit() {\n      this.limit = null;\n    },\n    setOffset(offset) {\n      this.offset = offset;\n    },\n    updateChart(chartType) {\n      this.chartType = chartType;\n    },\n    setOrder(order = {}) {\n      this.order = order;\n    },\n    emitVizStateChange(partialVizState) {\n      this.$emit(\n        'vizStateChange',\n        clone({\n          ...this.vizState,\n          ...partialVizState,\n        })\n      );\n    },\n  },\n\n  watch: {\n    validatedQuery: {\n      deep: true,\n      handler(query, prevQuery) {\n        const hasQueryChanged = !areQueriesEqual(query, prevQuery);\n\n        if (hasQueryChanged) {\n          this.emitVizStateChange({\n            query,\n          });\n        }\n\n        if (isQueryPresent(query) && hasQueryChanged) {\n          this.cubejsApi\n            .dryRun(query, {\n              mutexObj: this.mutex,\n            })\n            .then(({ pivotQuery }) => {\n              const pivotConfig = ResultSet.getNormalizedPivotConfig(pivotQuery, this.pivotConfig);\n\n              if (!equals(pivotConfig, this.pivotConfig)) {\n                this.pivotConfig = pivotConfig;\n              }\n            })\n            .catch((error) => console.error(error));\n        }\n      },\n    },\n    query: {\n      deep: true,\n      handler(query) {\n        if (!this.meta) {\n          // this is ok as if meta has not been loaded by the time query prop has changed,\n          // then the promise for loading meta (found in mounted()) will call\n          // copyQueryFromProps and will therefore update anyway.\n          return;\n        }\n        this.copyQueryFromProps(query);\n      },\n    },\n    pivotConfig: {\n      deep: true,\n      handler(pivotConfig, prevPivotConfig) {\n        if (!equals(pivotConfig, prevPivotConfig)) {\n          this.emitVizStateChange({\n            pivotConfig,\n          });\n        }\n      },\n    },\n    chartType(value) {\n      this.emitVizStateChange({\n        chartType: value,\n      });\n    },\n  },\n};\n","import { GRANULARITIES } from '@cubejs-client/core';\n\nimport QueryRenderer from './QueryRenderer';\nimport QueryBuilder from './QueryBuilder';\n\nexport { QueryRenderer, QueryBuilder, GRANULARITIES };\n\nexport default {};\n"],"names":["props","query","type","Object","Array","queries","loadSql","required","cubejsApi","builderProps","chartType","String","data","mutexObj","error","undefined","resultSet","loading","sqlQuery","mounted","isQueryPresent","load","loadQueries","render","createElement","$scopedSlots","empty","slot","$slots","controls","onlyDefault","builder","measures","slotProps","refetch","methods","sql","mutexKey","resultPromises","Promise","all","toPairs","map","name","then","r","fromPairs","watch","$emit","isLoading","deep","handler","prevQuery","areQueriesEqual","val","QUERY_ELEMENTS","toOrderMember","member","id","title","reduceOrderMembers","array","reduce","acc","order","operators","validateFilters","filters","raw","operator","validBooleanFilter","booleanFilters","length","some","getDimensionOrMeasure","meta","m","memberName","dimension","resolveMember","resolveMembers","arr","e","index","and","or","components","QueryRenderer","initialChartType","disableHeuristics","Boolean","stateChangeHeuristics","Function","initialVizState","wrapWithQueryRenderer","pivotConfig","initialQuery","skipHeuristics","mutex","dimensions","segments","timeDimensions","availableMeasures","availableDimensions","availableTimeDimensions","availableSegments","limit","offset","renewQuery","prevValidatedQuery","granularities","GRANULARITIES","ResultSet","getNormalizedPivotConfig","validatedQuery","setLimit","removeLimit","setOffset","removeOffset","orderMembers","updateChartType","updateChart","setOrder","setQuery","updateOrder","set","memberId","newOrder","orderMember","update","reorder","sourceIndex","destinationIndex","moveItemInArray","updatePivotConfig","moveItem","sourceAxis","destinationAxis","movePivotItem","forEach","elementName","charAt","toUpperCase","slice","addMember","updateWith","updateMember","removeMember","members","setMembers","children","keys","scopedSlots","on","queryStatus","event","computed","getOrderMembersFromOrder","filter","vizState","toQuery","hasElements","element","granularity","dateRange","values","x","heuristicsFn","defaultHeuristics","sessionGranularity","shouldApplyHeuristicOrder","defaultOrder","copyQueryFromProps","dryRun","dryRunResponse","pivotQuery","console","memberTypes","filterOperatorsForMember","membersForQuery","mem","find","push","findIndex","splice","old","elements","emitVizStateChange","partialVizState","clone","hasQueryChanged","equals","prevPivotConfig","value"],"mappings":"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"}