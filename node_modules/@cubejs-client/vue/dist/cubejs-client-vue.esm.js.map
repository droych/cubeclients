{"version":3,"file":"cubejs-client-vue.esm.js","sources":["../src/QueryRenderer.js","../src/QueryBuilder.js","../src/index.js"],"sourcesContent":["import { toPairs, fromPairs } from 'ramda';\nimport { isQueryPresent, areQueriesEqual } from '@cubejs-client/core';\n\nexport default {\n  props: {\n    query: {\n      type: [Object, Array],\n      default: () => ({}),\n    },\n    // TODO: validate with current react implementation\n    queries: {\n      type: Object,\n    },\n    loadSql: {\n      required: false,\n    },\n    cubejsApi: {\n      type: Object,\n      required: true,\n    },\n    builderProps: {\n      type: Object,\n      required: false,\n      default: () => ({}),\n    },\n    chartType: {\n      type: String,\n      required: false,\n    },\n  },\n  data() {\n    return {\n      mutexObj: {},\n      error: undefined,\n      resultSet: undefined,\n      loading: false,\n      sqlQuery: undefined,\n    };\n  },\n  async mounted() {\n    const { query, queries } = this;\n\n    if (isQueryPresent(query)) {\n      await this.load();\n    } else if (isQueryPresent(queries)) {\n      await this.loadQueries(queries);\n    }\n  },\n  render(createElement) {\n    const { $scopedSlots, resultSet, error, loading, sqlQuery } = this;\n    const empty = createElement('div', {});\n    let slot = this.$slots.empty ? this.$slots.empty : empty;\n    let controls = createElement('div', {});\n    const onlyDefault = !('empty' in this.$slots) && !('error' in this.$scopedSlots);\n\n    if ($scopedSlots.builder && this.builderProps.measures) {\n      controls = $scopedSlots.builder({ ...this.builderProps });\n    }\n\n    if ((!loading && resultSet && !error) || onlyDefault) {\n      let slotProps = {\n        resultSet,\n        sqlQuery,\n        query: this.builderProps.query || this.query,\n      };\n\n      if (onlyDefault) {\n        slotProps = {\n          loading,\n          error,\n          refetch: this.load,\n          ...this.builderProps,\n          ...slotProps,\n        };\n      }\n\n      slot = $scopedSlots.default ? $scopedSlots.default(slotProps) : slot;\n    } else if (error) {\n      slot = $scopedSlots.error ? $scopedSlots.error({ error, sqlQuery }) : slot;\n    }\n\n    return createElement('div', {}, [controls, slot]);\n  },\n  methods: {\n    async load() {\n      const { query } = this;\n\n      if (!isQueryPresent(query)) {\n        return;\n      }\n\n      try {\n        this.loading = true;\n        this.error = null;\n        this.resultSet = null;\n\n        if (this.loadSql === 'only') {\n          this.sqlQuery = await this.cubejsApi.sql(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'sql',\n          });\n        } else if (this.loadSql) {\n          this.sqlQuery = await this.cubejsApi.sql(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'sql',\n          });\n          this.resultSet = await this.cubejsApi.load(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'query',\n          });\n        } else {\n          this.resultSet = await this.cubejsApi.load(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'query',\n          });\n        }\n\n        this.loading = false;\n      } catch (error) {\n        this.error = error;\n        this.resultSet = undefined;\n        this.loading = false;\n      }\n    },\n    async loadQueries() {\n      const { queries } = this;\n      try {\n        this.error = undefined;\n        this.loading = true;\n\n        const resultPromises = Promise.all(\n          toPairs(queries).map(([name, query]) =>\n            this.cubejsApi\n              .load(query, {\n                mutexObj: this.mutexObj,\n                mutexKey: name,\n              })\n              .then((r) => [name, r])\n          )\n        );\n\n        this.resultSet = fromPairs(await resultPromises);\n        this.loading = false;\n      } catch (error) {\n        this.error = error;\n        this.loading = false;\n      }\n    },\n  },\n  watch: {\n    loading(loading) {\n      if (loading === false) {\n        this.$emit('queryStatus', {\n          isLoading: false,\n          error: this.error,\n          resultSet: this.resultSet,\n        });\n      } else {\n        this.$emit('queryStatus', { isLoading: true });\n      }\n    },\n    cubejsApi() {\n      this.load();\n    },\n    chartType() {\n      this.load();\n    },\n    query: {\n      deep: true,\n      handler(query, prevQuery) {\n        if (!areQueriesEqual(query, prevQuery)) {\n          this.load();\n        }\n      },\n    },\n    queries: {\n      handler(val) {\n        if (val) {\n          this.loadQueries();\n        }\n      },\n      deep: true,\n    },\n  },\n};\n","import {\n  isQueryPresent,\n  defaultOrder,\n  defaultHeuristics,\n  GRANULARITIES,\n  ResultSet,\n  getOrderMembersFromOrder,\n  moveItemInArray,\n  movePivotItem,\n  areQueriesEqual,\n} from '@cubejs-client/core';\nimport { clone, equals } from 'ramda';\n\nimport QueryRenderer from './QueryRenderer';\n\nconst QUERY_ELEMENTS = ['measures', 'dimensions', 'segments', 'timeDimensions', 'filters'];\n\nconst toOrderMember = (member) => ({\n  id: member.name,\n  title: member.title,\n});\n\nconst reduceOrderMembers = (array) =>\n  array.reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []);\n\nconst operators = ['and', 'or'];\n\nconst validateFilters = (filters) =>\n  filters.reduce((acc, raw) => {\n    if (raw.operator) {\n      return [...acc, raw];\n    }\n\n    const validBooleanFilter = operators.reduce((acc, operator) => {\n      const filters = raw[operator];\n\n      const booleanFilters = validateFilters(filters || []);\n\n      if (booleanFilters.length) {\n        return { ...acc, [operator]: booleanFilters };\n      }\n\n      return acc;\n    }, {});\n\n    if (operators.some((operator) => validBooleanFilter[operator])) {\n      return [...acc, validBooleanFilter];\n    }\n\n    return acc;\n  }, []);\n\nconst getDimensionOrMeasure = (meta, m) => {\n  const memberName = m.member || m.dimension;\n  return memberName && meta.resolveMember(memberName, ['dimensions', 'measures']);\n};\n\nconst resolveMembers = (meta, arr) =>\n  arr &&\n  arr.map((e, index) => {\n    return {\n      ...e,\n      member: getDimensionOrMeasure(meta, e),\n      index,\n      and: resolveMembers(meta, e.and),\n      or: resolveMembers(meta, e.or),\n    };\n  });\n\nexport default {\n  components: {\n    QueryRenderer,\n  },\n  props: {\n    query: {\n      type: Object,\n      default: () => ({}),\n    },\n    cubejsApi: {\n      type: Object,\n      required: true,\n    },\n    initialChartType: {\n      type: String,\n      default: () => 'line',\n    },\n    disableHeuristics: {\n      type: Boolean,\n    },\n    stateChangeHeuristics: {\n      type: Function,\n    },\n    initialVizState: {\n      type: Object,\n      default: () => ({}),\n    },\n    wrapWithQueryRenderer: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    const {\n      query = this.query,\n      chartType = this.initialChartType,\n      pivotConfig,\n    } = this.initialVizState;\n\n    return {\n      initialQuery: query,\n      skipHeuristics: true,\n      meta: undefined,\n      mutex: {},\n      chartType,\n      measures: [],\n      dimensions: [],\n      segments: [],\n      timeDimensions: [],\n      filters: [],\n      availableMeasures: [],\n      availableDimensions: [],\n      availableTimeDimensions: [],\n      availableSegments: [],\n      limit: null,\n      offset: null,\n      renewQuery: false,\n      order: null,\n      prevValidatedQuery: null,\n      granularities: GRANULARITIES,\n      pivotConfig: ResultSet.getNormalizedPivotConfig(query || {}, pivotConfig),\n    };\n  },\n\n  render(createElement) {\n    const {\n      chartType,\n      cubejsApi,\n      dimensions,\n      filters,\n      measures,\n      meta,\n      query,\n      segments,\n      timeDimensions,\n      validatedQuery,\n      isQueryPresent,\n      availableSegments,\n      availableTimeDimensions,\n      availableDimensions,\n      availableMeasures,\n      limit,\n      offset,\n      setLimit,\n      removeLimit,\n      setOffset,\n      removeOffset,\n      renewQuery,\n      order,\n      orderMembers,\n    } = this;\n\n    let builderProps = {};\n\n    if (meta) {\n      builderProps = {\n        query,\n        validatedQuery,\n        isQueryPresent,\n        chartType,\n        measures,\n        dimensions,\n        segments,\n        timeDimensions,\n        filters,\n        availableSegments,\n        availableTimeDimensions,\n        availableDimensions,\n        availableMeasures,\n        updateChartType: this.updateChart,\n        limit,\n        offset,\n        setLimit,\n        removeLimit,\n        setOffset,\n        removeOffset,\n        renewQuery,\n        order,\n        orderMembers,\n        setOrder: this.setOrder,\n        setQuery: this.setQuery,\n        pivotConfig: this.pivotConfig,\n        updateOrder: {\n          set: (memberId, newOrder) => {\n            this.order = reduceOrderMembers(\n              orderMembers.map((orderMember) => ({\n                ...orderMember,\n                order: orderMember.id === memberId ? newOrder : orderMember.order,\n              }))\n            );\n          },\n          update: (newOrder) => {\n            this.order = newOrder;\n          },\n          reorder: (sourceIndex, destinationIndex) => {\n            this.order = reduceOrderMembers(\n              moveItemInArray(orderMembers, sourceIndex, destinationIndex)\n            );\n          },\n        },\n        updatePivotConfig: {\n          moveItem: ({ sourceIndex, destinationIndex, sourceAxis, destinationAxis }) => {\n            this.pivotConfig = movePivotItem(\n              this.pivotConfig,\n              sourceIndex,\n              destinationIndex,\n              sourceAxis,\n              destinationAxis\n            );\n          },\n          update: (pivotConfig) => {\n            this.pivotConfig = {\n              ...this.pivotConfig,\n              ...pivotConfig,\n            };\n          },\n        },\n      };\n\n      QUERY_ELEMENTS.forEach((elementName) => {\n        const name = elementName.charAt(0).toUpperCase() + elementName.slice(1);\n\n        builderProps[`add${name}`] = (member) => {\n          this.addMember(elementName, member);\n        };\n\n        builderProps[`update${name}`] = (member, updateWith) => {\n          this.updateMember(elementName, member, updateWith);\n        };\n\n        builderProps[`remove${name}`] = (member) => {\n          this.removeMember(elementName, member);\n        };\n\n        builderProps[`set${name}`] = (members) => {\n          this.setMembers(elementName, members);\n        };\n      });\n    }\n\n    if (!this.wrapWithQueryRenderer && this.$scopedSlots.builder) {\n      return createElement('div', {}, [this.$scopedSlots.builder(builderProps)]);\n    }\n\n    // Pass parent slots to child QueryRenderer component\n    const children = Object.keys(this.$slots).map((slot) =>\n      createElement('template', { slot }, this.$slots[slot])\n    );\n\n    return createElement(\n      QueryRenderer,\n      {\n        props: {\n          query: this.validatedQuery,\n          cubejsApi,\n          builderProps,\n        },\n        scopedSlots: this.$scopedSlots,\n        on: {\n          queryStatus: (event) => {\n            this.$emit('queryStatus', event);\n          },\n        },\n      },\n      children\n    );\n  },\n  computed: {\n    isQueryPresent() {\n      const { validatedQuery } = this;\n\n      return isQueryPresent(validatedQuery);\n    },\n    orderMembers() {\n      return getOrderMembersFromOrder(\n        [\n          ...this.measures,\n          ...this.dimensions,\n          ...this.timeDimensions.map(({ dimension }) => toOrderMember(dimension)),\n        ]\n          .map((member, index) => {\n            const id = member.name || member.id;\n\n            if (!id) {\n              return false;\n            }\n\n            return {\n              index,\n              id,\n              title: member.title,\n            };\n          })\n          .filter(Boolean),\n        this.order\n      );\n    },\n    vizState() {\n      return {\n        query: this.validatedQuery,\n        chartType: this.chartType,\n        pivotConfig: this.pivotConfig,\n      };\n    },\n    validatedQuery() {\n      let validatedQuery = {};\n      let toQuery = (member) => member.name;\n      // TODO: implement timezone\n\n      let hasElements = false;\n      QUERY_ELEMENTS.forEach((element) => {\n        if (element === 'timeDimensions') {\n          toQuery = (member) => ({\n            dimension: member.dimension.name,\n            granularity: member.granularity,\n            dateRange: member.dateRange,\n          });\n        } else if (element === 'filters') {\n          toQuery = (member) => ({\n            member: member.member && member.member.name,\n            operator: member.operator,\n            values: member.values,\n            and: member.and && member.and.map(toQuery),\n            or: member.or && member.or.map(toQuery),\n          });\n        }\n\n        if (this[element].length > 0) {\n          validatedQuery[element] = this[element].map((x) => toQuery(x));\n\n          hasElements = true;\n        }\n      });\n\n      if (validatedQuery.filters) {\n        validatedQuery.filters = validateFilters(validatedQuery.filters);\n      }\n\n      // only set limit and offset if there are elements otherwise an invalid request with just limit/offset\n      // gets sent when the component is first mounted, but before the actual query is constructed.\n      if (hasElements) {\n        if (this.limit) {\n          validatedQuery.limit = this.limit;\n        }\n\n        if (this.offset) {\n          validatedQuery.offset = this.offset;\n        }\n\n        if (this.order) {\n          validatedQuery.order = this.order;\n        }\n\n        if (this.renewQuery) {\n          validatedQuery.renewQuery = this.renewQuery;\n        }\n      }\n\n      if (\n        !this.skipHeuristics &&\n        !this.disableHeuristics &&\n        isQueryPresent(validatedQuery) &&\n        this.meta\n      ) {\n        const heuristicsFn = this.stateChangeHeuristics || defaultHeuristics;\n        const { query, chartType, shouldApplyHeuristicOrder, pivotConfig } = heuristicsFn(\n          {\n            query: validatedQuery,\n            chartType: this.chartType,\n          },\n          this.prevValidatedQuery,\n          {\n            meta: this.meta,\n            sessionGranularity: validatedQuery?.timeDimensions?.[0]?.granularity,\n          }\n        );\n\n        validatedQuery = {\n          ...validatedQuery,\n          ...query,\n          ...(shouldApplyHeuristicOrder ? { order: defaultOrder(query) } : null),\n        };\n\n        this.chartType = chartType || this.chartType;\n        this.pivotConfig = ResultSet.getNormalizedPivotConfig(\n          validatedQuery,\n          pivotConfig || this.pivotConfig\n        );\n        this.copyQueryFromProps(validatedQuery);\n      }\n\n      // query heuristics should only apply on query change (not applied to the initial query)\n      if (this.prevValidatedQuery !== null) {\n        this.skipHeuristics = false;\n      }\n\n      this.prevValidatedQuery = validatedQuery;\n      return validatedQuery;\n    },\n  },\n\n  async mounted() {\n    this.meta = await this.cubejsApi.meta();\n\n    this.copyQueryFromProps();\n\n    if (isQueryPresent(this.initialQuery)) {\n      try {\n        const dryRunResponse = await this.cubejsApi.dryRun(this.initialQuery);\n\n        this.pivotConfig = ResultSet.getNormalizedPivotConfig(\n          dryRunResponse?.pivotQuery || {},\n          this.pivotConfig\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n\n  methods: {\n    copyQueryFromProps(query) {\n      const {\n        measures = [],\n        dimensions = [],\n        segments = [],\n        timeDimensions = [],\n        filters = [],\n        limit,\n        offset,\n        renewQuery,\n        order,\n      } = query || this.initialQuery;\n\n      this.measures = measures.map((m, index) => ({\n        index,\n        ...this.meta.resolveMember(m, 'measures'),\n      }));\n      this.dimensions = dimensions.map((m, index) => ({\n        index,\n        ...this.meta.resolveMember(m, 'dimensions'),\n      }));\n      this.segments = segments.map((m, index) => ({\n        index,\n        ...this.meta.resolveMember(m, 'segments'),\n      }));\n      this.timeDimensions = timeDimensions.map((m, index) => ({\n        ...m,\n        dimension: {\n          ...this.meta.resolveMember(m.dimension, 'dimensions'),\n          granularities: this.granularities,\n        },\n        index,\n      }));\n      const memberTypes = ['dimensions', 'measures'];\n      this.filters = filters.map((m, index) => {\n        const memberName = m.member || m.dimension;\n        return {\n          ...m,\n          member: memberName && this.meta.resolveMember(memberName, memberTypes),\n          operators: memberName && this.meta.filterOperatorsForMember(memberName, memberTypes),\n          and: resolveMembers(this.meta, m.and),\n          or: resolveMembers(this.meta, m.or),\n          index,\n        };\n      });\n\n      this.availableMeasures = this.meta.membersForQuery({}, 'measures') || [];\n      this.availableDimensions = this.meta.membersForQuery({}, 'dimensions') || [];\n      this.availableTimeDimensions = (this.meta.membersForQuery({}, 'dimensions') || []).filter(\n        (m) => m.type === 'time'\n      );\n      this.availableSegments = this.meta.membersForQuery({}, 'segments') || [];\n      this.limit = limit || 10000;\n      this.offset = offset || null;\n      this.renewQuery = renewQuery || false;\n      this.order = order || null;\n    },\n    addMember(element, member) {\n      const name = element.charAt(0).toUpperCase() + element.slice(1);\n      let mem;\n\n      if (element === 'timeDimensions') {\n        mem = this[`available${name}`].find((m) => m.name === member.dimension);\n        if (mem) {\n          const dimension = {\n            ...this.meta.resolveMember(mem.name, 'dimensions'),\n            granularities: this.granularities,\n          };\n\n          mem = {\n            ...mem,\n            granularity: member.granularity,\n            dateRange: member.dateRange,\n            dimension,\n            index: this[element].length,\n          };\n        }\n      } else if (element === 'filters') {\n        mem = {\n          ...member,\n          and: resolveMembers(this.meta, member.and),\n          or: resolveMembers(this.meta, member.or),\n          member: getDimensionOrMeasure(this.meta, member),\n        };\n      } else {\n        mem = this[`available${name}`].find((m) => m.name === member);\n      }\n\n      if (mem) {\n        this[element].push(mem);\n      }\n    },\n    removeMember(element, member) {\n      let index;\n      if (element === 'timeDimensions') {\n        index = this[element].findIndex((x) => x.name === member);\n      } else if (element === 'filters') {\n        index = this[element].findIndex((x) => x.member.name === member);\n      } else {\n        index = this[element].findIndex((x) => x.name === member);\n      }\n      this[element].splice(index, 1);\n    },\n    updateMember(element, old, member) {\n      const name = element.charAt(0).toUpperCase() + element.slice(1);\n      let mem;\n      let index;\n\n      if (element === 'timeDimensions') {\n        index = this[element].findIndex((x) => x.dimension.name === old.dimension);\n        mem = this[`available${name}`].find((m) => m.name === member.dimension);\n        if (mem) {\n          const dimension = {\n            ...this.meta.resolveMember(mem.name, 'dimensions'),\n            granularities: this.granularities,\n          };\n\n          mem = {\n            ...mem,\n            dimension,\n            granularity: member.granularity,\n            dateRange: member.dateRange,\n            index,\n          };\n        }\n      } else if (element === 'filters') {\n        index = this[element].findIndex((x) => x.dimension === old);\n        mem = {\n          ...member,\n          and: resolveMembers(this.meta, member.and),\n          or: resolveMembers(this.meta, member.or),\n          member: getDimensionOrMeasure(this.meta, member),\n        };\n      } else {\n        index = this[element].findIndex((x) => x.name === old);\n        mem = this[`available${name}`].find((m) => m.name === member);\n      }\n\n      if (mem) {\n        this[element].splice(index, 1, mem);\n      }\n    },\n    setMembers(element, members) {\n      const name = element.charAt(0).toUpperCase() + element.slice(1);\n      let mem;\n      const elements = [];\n\n      members.filter(Boolean).forEach((m) => {\n        if (element === 'timeDimensions') {\n          mem = this[`available${name}`].find((x) => x.name === m.dimension);\n          if (mem) {\n            const dimension = {\n              ...this.meta.resolveMember(mem.name, 'dimensions'),\n              granularities: this.granularities,\n            };\n\n            mem = {\n              ...mem,\n              granularity: m.granularity,\n              dateRange: m.dateRange,\n              dimension,\n              index: this[element].length,\n            };\n          }\n        } else if (element === 'filters') {\n          mem = {\n            ...m,\n            and: resolveMembers(this.meta, m.and),\n            or: resolveMembers(this.meta, m.or),\n            member: getDimensionOrMeasure(this.meta, m),\n          };\n        } else {\n          mem = this[`available${name}`].find((x) => x.name === m);\n        }\n\n        if (mem) {\n          elements.push(mem);\n        }\n      });\n\n      this[element] = elements;\n    },\n    setLimit(limit) {\n      this.limit = limit;\n    },\n    removeLimit() {\n      this.limit = null;\n    },\n    setOffset(offset) {\n      this.offset = offset;\n    },\n    updateChart(chartType) {\n      this.chartType = chartType;\n    },\n    setOrder(order = {}) {\n      this.order = order;\n    },\n    emitVizStateChange(partialVizState) {\n      this.$emit(\n        'vizStateChange',\n        clone({\n          ...this.vizState,\n          ...partialVizState,\n        })\n      );\n    },\n  },\n\n  watch: {\n    validatedQuery: {\n      deep: true,\n      handler(query, prevQuery) {\n        const hasQueryChanged = !areQueriesEqual(query, prevQuery);\n\n        if (hasQueryChanged) {\n          this.emitVizStateChange({\n            query,\n          });\n        }\n\n        if (isQueryPresent(query) && hasQueryChanged) {\n          this.cubejsApi\n            .dryRun(query, {\n              mutexObj: this.mutex,\n            })\n            .then(({ pivotQuery }) => {\n              const pivotConfig = ResultSet.getNormalizedPivotConfig(pivotQuery, this.pivotConfig);\n\n              if (!equals(pivotConfig, this.pivotConfig)) {\n                this.pivotConfig = pivotConfig;\n              }\n            })\n            .catch((error) => console.error(error));\n        }\n      },\n    },\n    query: {\n      deep: true,\n      handler(query) {\n        if (!this.meta) {\n          // this is ok as if meta has not been loaded by the time query prop has changed,\n          // then the promise for loading meta (found in mounted()) will call\n          // copyQueryFromProps and will therefore update anyway.\n          return;\n        }\n        this.copyQueryFromProps(query);\n      },\n    },\n    pivotConfig: {\n      deep: true,\n      handler(pivotConfig, prevPivotConfig) {\n        if (!equals(pivotConfig, prevPivotConfig)) {\n          this.emitVizStateChange({\n            pivotConfig,\n          });\n        }\n      },\n    },\n    chartType(value) {\n      this.emitVizStateChange({\n        chartType: value,\n      });\n    },\n  },\n};\n","import { GRANULARITIES } from '@cubejs-client/core';\n\nimport QueryRenderer from './QueryRenderer';\nimport QueryBuilder from './QueryBuilder';\n\nexport { QueryRenderer, QueryBuilder, GRANULARITIES };\n\nexport default {};\n"],"names":["props","query","type","Object","Array","default","queries","loadSql","required","cubejsApi","builderProps","chartType","String","data","mutexObj","error","undefined","resultSet","loading","sqlQuery","mounted","isQueryPresent","load","loadQueries","render","createElement","$scopedSlots","empty","slot","$slots","controls","onlyDefault","builder","measures","slotProps","refetch","methods","sql","mutexKey","resultPromises","Promise","all","toPairs","map","name","then","r","fromPairs","watch","$emit","isLoading","deep","handler","prevQuery","areQueriesEqual","val","QUERY_ELEMENTS","toOrderMember","member","id","title","reduceOrderMembers","array","reduce","acc","order","operators","validateFilters","filters","raw","operator","validBooleanFilter","booleanFilters","length","some","getDimensionOrMeasure","meta","m","memberName","dimension","resolveMember","resolveMembers","arr","e","index","and","or","components","QueryRenderer","initialChartType","disableHeuristics","Boolean","stateChangeHeuristics","Function","initialVizState","wrapWithQueryRenderer","pivotConfig","initialQuery","skipHeuristics","mutex","dimensions","segments","timeDimensions","availableMeasures","availableDimensions","availableTimeDimensions","availableSegments","limit","offset","renewQuery","prevValidatedQuery","granularities","GRANULARITIES","ResultSet","getNormalizedPivotConfig","validatedQuery","setLimit","removeLimit","setOffset","removeOffset","orderMembers","updateChartType","updateChart","setOrder","setQuery","updateOrder","set","memberId","newOrder","orderMember","update","reorder","sourceIndex","destinationIndex","moveItemInArray","updatePivotConfig","moveItem","sourceAxis","destinationAxis","movePivotItem","forEach","elementName","charAt","toUpperCase","slice","addMember","updateWith","updateMember","removeMember","members","setMembers","children","keys","scopedSlots","on","queryStatus","event","computed","getOrderMembersFromOrder","filter","vizState","toQuery","hasElements","element","granularity","dateRange","values","x","heuristicsFn","defaultHeuristics","shouldApplyHeuristicOrder","sessionGranularity","defaultOrder","copyQueryFromProps","dryRunResponse","dryRun","pivotQuery","console","memberTypes","filterOperatorsForMember","membersForQuery","mem","find","push","findIndex","splice","old","elements","emitVizStateChange","partialVizState","clone","hasQueryChanged","equals","catch","prevPivotConfig","value"],"mappings":"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"}